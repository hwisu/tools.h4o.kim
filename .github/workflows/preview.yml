name: Deploy Preview

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  preview:
    runs-on: ubuntu-latest
    name: Deploy Preview
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Deploy preview to Cloudflare Workers
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging
          environment: staging

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const deploymentUrl = '${{ steps.deploy.outputs.deployment-url }}' || 'URL을 가져올 수 없습니다';

            const comment = `
            ## 🚀 Preview 배포 완료!

            **Preview URL:** ${deploymentUrl}

            **환경:** staging
            **브랜치:** \`${context.payload.pull_request.head.ref}\`
            **커밋:** \`${context.sha.substring(0, 7)}\`

            ---
            *이 미리보기는 PR이 업데이트될 때마다 자동으로 갱신됩니다.*
            `;

            // 기존 봇 댓글 찾기
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🚀 Preview 배포 완료!')
            );

            if (existingComment) {
              // 기존 댓글 업데이트
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // 새 댓글 생성
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
